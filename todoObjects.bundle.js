"use strict";(self.webpackChunktodo_list=self.webpackChunktodo_list||[]).push([[367],{831:(t,e,o)=>{o.d(e,{Ad:()=>d,q0:()=>i});const i=t=>{let e=[];const o=t=>{e.push(t),i()},i=()=>{e.sort(d)},d=(t,e)=>{if(t.priority<e.priority)return-1},l=t=>{let o=r(t);void 0!==o&&e.splice(o,1)},r=t=>e.findIndex((e=>e.title===t.title));return{title:t,todoArr:e,addTodo:o,removeTodo:l,createTodo:(t,e,i,d,l)=>{null==l&&(l=!1);let r=((t,e,o,i,d)=>({title:t,description:e,dueDate:o,priority:i,completed:d}))(t,e,i,d,l);o(r)},getTodoIdByTitle:t=>e.findIndex((e=>e.title===t)),removeTodoByTitle:t=>{let o=e.find((e=>e.title===t));void 0!==o&&l(o)},todoWithTitle:t=>e.find((e=>e.title===t)),sortTodos:i}},d=t=>{let e=[];const o=t=>{e.push(t)},d=t=>e.find((e=>e.title===t)),l=t=>{let o=r(t);void 0!==o&&e.splice(o,1)},r=t=>e.findIndex((e=>e.title===t.title));return{username:t,projectArr:e,addProject:o,createProject:t=>{o(i(t))},removeProject:l,createTodo:(t,e,l,r,n,c)=>{let s=d(t);void 0===s&&(s=i(t),o(s)),s.createTodo(e,l,r,n,c)},addTodo:(t,e)=>{let l=d(t);void 0===l&&(l=i(t),o(l)),l.addTodo(e)},projectWithTitle:d,projectIdWithTitle:t=>e.findIndex((e=>e.title===t)),removeProjectByTitle:t=>{let o=e.find((e=>e.title===t));void 0!==o&&l(o)}}}}},t=>{t(t.s=831)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,